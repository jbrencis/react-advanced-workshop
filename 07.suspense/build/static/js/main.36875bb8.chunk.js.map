{"version":3,"sources":["App.js","index.js"],"names":["PublicHolidays","lazy","Promise","all","__webpack_require__","e","then","bind","MODES","CURRENT_DATE","PUBLIC_HOLIDAYS","addLeadingZero","value","concat","App","state","mode","time","Date","handleToggleModeClick","_this","setState","_this2","this","intervalId","setInterval","clearInterval","react_default","a","createElement","className","onClick","react","fallback","currentDateRender","publicHolidaysRender","date","hh","getHours","mm","getMinutes","ss","getSeconds","formatTime","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"yNAKMA,SAAiBC,eAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,aAE5BC,EAAQ,CACZC,aAAc,eACdC,gBAAiB,mBAGbC,EAAiB,SAAAC,GAAK,OAAIA,EAAQ,GAAR,IAAAC,OAAiBD,GAAjB,GAAAC,OAA8BD,IAwD/CE,6MA9CbC,MAAQ,CACNC,KAAMR,EAAMC,aACZQ,KAAM,IAAIC,QAWZC,sBAAwB,WAClBC,EAAKL,MAAMC,OAASR,EAAMC,aAC5BW,EAAKC,SAAS,CAAEL,KAAMR,EAAME,kBAE5BU,EAAKC,SAAS,CAAEL,KAAMR,EAAMC,mGAZZ,IAAAa,EAAAC,KAClBA,KAAKC,WAAaC,YAAY,kBAAMH,EAAKD,SAAS,CAAEJ,KAAM,IAAIC,wDAI9DQ,cAAcH,KAAKC,6CAsBnB,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAQE,QAASR,KAAKJ,uBAAtB,eACAQ,EAAAC,EAAAC,cAACG,EAAA,SAAD,CAAUC,SAAUN,EAAAC,EAAAC,cAAA,0BAElBN,KAAKR,MAAMC,OAASR,EAAMC,aAAec,KAAKW,kBAAoBX,KAAKY,iEAhB7E,OACER,EAAAC,EAAAC,cAAA,WAhCa,SAACO,GAClB,IAAMC,EAAK1B,EAAeyB,EAAKE,YACzBC,EAAK5B,EAAeyB,EAAKI,cACzBC,EAAK9B,EAAeyB,EAAKM,cAE/B,SAAA7B,OAAUwB,EAAV,KAAAxB,OAAgB0B,EAAhB,KAAA1B,OAAsB4B,GA2BZE,CAAWpB,KAAKR,MAAME,oDAK9B,OAAOU,EAAAC,EAAAC,cAAC7B,EAAD,aA7BO4C,aChBlBC,IAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.36875bb8.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from 'react';\nimport './App.css';\n\n// import PublicHolidays from './PublicHolidays'\n\nconst PublicHolidays = lazy(() => import(/* webpackChunkName: \"publicHolidays\" */ './PublicHolidays'));\n\nconst MODES = {\n  CURRENT_DATE: 'CURRENT_DATE',\n  PUBLIC_HOLIDAYS: 'PUBLIC_HOLIDAYS',\n}\n\nconst addLeadingZero = value => value < 10 ? `0${value}` : `${value}`\nconst formatTime = (date) => {\n  const hh = addLeadingZero(date.getHours())\n  const mm = addLeadingZero(date.getMinutes())\n  const ss = addLeadingZero(date.getSeconds())\n\n  return `${hh}:${mm}:${ss}`\n}\n\nclass App extends Component {\n  state = {\n    mode: MODES.CURRENT_DATE,\n    time: new Date(),\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(() => this.setState({ time: new Date() }))\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId)\n  }\n\n  handleToggleModeClick = () => {\n    if (this.state.mode === MODES.CURRENT_DATE) {\n      this.setState({ mode: MODES.PUBLIC_HOLIDAYS })\n    } else {\n      this.setState({ mode: MODES.CURRENT_DATE })\n    }\n  }\n\n  get currentDateRender() {\n    return (\n      <div>{formatTime(this.state.time)}</div>\n    )\n  }\n\n  get publicHolidaysRender() {\n    return <PublicHolidays/>\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Calendar</h1>\n        <button onClick={this.handleToggleModeClick}>Toggle mode</button>\n        <Suspense fallback={<div>Loading...</div>}>\n        {\n          this.state.mode === MODES.CURRENT_DATE ? this.currentDateRender : this.publicHolidaysRender\n        }\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}